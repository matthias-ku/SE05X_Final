#include <SE05X.h>

// CAVS 11.4
const char currentTest[] = "FIPS186-3 - SigGenPSS_186-3 RSASSA-PSS: Mod Size 2048 with SHA-256(Salt len: 20)";
const byte n[] = {0xc5, 0x06, 0x2b, 0x58, 0xd8, 0x53, 0x9c, 0x76, 0x5e, 0x1e, 0x5d, 0xba, 0xf1, 0x4c, 0xf7, 0x5d, 0xd5, 0x6c, 0x2e, 0x13, 0x10, 0x5f, 0xec, 0xfd, 0x1a, 0x93, 0x0b, 0xbb, 0x59, 0x48, 0xff, 0x32, 0x8f, 0x12, 0x6a, 0xbe, 0x77, 0x93, 0x59, 0xca, 0x59, 0xbc, 0xa7, 0x52, 0xc3, 0x08, 0xd2, 0x81, 0x57, 0x3b, 0xc6, 0x17, 0x8b, 0x6c, 0x0f, 0xef, 0x7d, 0xc4, 0x45, 0xe4, 0xf8, 0x26, 0x43, 0x04, 0x37, 0xb9, 0xf9, 0xd7, 0x90, 0x58, 0x1d, 0xe5, 0x74, 0x9c, 0x2c, 0xb9, 0xcb, 0x26, 0xd4, 0x2b, 0x2f, 0xee, 0x15, 0xb6, 0xb2, 0x6f, 0x09, 0xc9, 0x96, 0x70, 0x33, 0x64, 0x23, 0xb8, 0x6b, 0xc5, 0xbe, 0xc7, 0x11, 0x13, 0x15, 0x7b, 0xe2, 0xd9, 0x44, 0xd7, 0xff, 0x3e, 0xeb, 0xff, 0xb2, 0x84, 0x13, 0x14, 0x3e, 0xa3, 0x67, 0x55, 0xdb, 0x0a, 0xe6, 0x2f, 0xf5, 0xb7, 0x24, 0xee, 0xcb, 0x3d, 0x31, 0x6b, 0x6b, 0xac, 0x67, 0xe8, 0x9c, 0xac, 0xd8, 0x17, 0x19, 0x37, 0xe2, 0xab, 0x19, 0xbd, 0x35, 0x3a, 0x89, 0xac, 0xea, 0x8c, 0x36, 0xf8, 0x1c, 0x89, 0xa6, 0x20, 0xd5, 0xfd, 0x2e, 0xff, 0xea, 0x89, 0x66, 0x01, 0xc7, 0xf9, 0xda, 0xca, 0x7f, 0x03, 0x3f, 0x63, 0x5a, 0x3a, 0x94, 0x33, 0x31, 0xd1, 0xb1, 0xb4, 0xf5, 0x28, 0x87, 0x90, 0xb5, 0x3a, 0xf3, 0x52, 0xf1, 0x12, 0x1c, 0xa1, 0xbe, 0xf2, 0x05, 0xf4, 0x0d, 0xc0, 0x12, 0xc4, 0x12, 0xb4, 0x0b, 0xdd, 0x27, 0x58, 0x5b, 0x94, 0x64, 0x66, 0xd7, 0x5f, 0x7e, 0xe0, 0xa7, 0xf9, 0xd5, 0x49, 0xb4, 0xbe, 0xce, 0x6f, 0x43, 0xac, 0x3e, 0xe6, 0x5f, 0xe7, 0xfd, 0x37, 0x12, 0x33, 0x59, 0xd9, 0xf1, 0xa8, 0x50, 0xad, 0x45, 0x0a, 0xaf, 0x5c, 0x94, 0xeb, 0x11, 0xde, 0xa3, 0xfc, 0x0f, 0xc6, 0xe9, 0x85, 0x6b, 0x18, 0x05, 0xef}; // Length: 256 bytes
const byte e[] = {0x00, 0x86, 0xc9, 0x4f}; // Length: 4 bytes
const byte d[] = {0x49, 0xe5, 0x78, 0x6b, 0xb4, 0xd3, 0x32, 0xf9, 0x45, 0x86, 0x32, 0x7b, 0xde, 0x08, 0x88, 0x75, 0x37, 0x9b, 0x75, 0xd1, 0x28, 0x48, 0x8f, 0x08, 0xe5, 0x74, 0xab, 0x47, 0x15, 0x30, 0x2a, 0x87, 0xee, 0xa5, 0x2d, 0x4c, 0x4a, 0x23, 0xd8, 0xb9, 0x7a, 0xf7, 0x94, 0x48, 0x04, 0x33, 0x7c, 0x5f, 0x55, 0xe1, 0x6b, 0xa9, 0xff, 0xaf, 0xc0, 0xc9, 0xfd, 0x9b, 0x88, 0xec, 0xa4, 0x43, 0xf3, 0x9b, 0x79, 0x67, 0x17, 0x0d, 0xdb, 0x8c, 0xe7, 0xdd, 0xb9, 0x3c, 0x60, 0x87, 0xc8, 0x06, 0x6c, 0x4a, 0x95, 0x53, 0x8a, 0x44, 0x1b, 0x9d, 0xc8, 0x0d, 0xc9, 0xf7, 0x81, 0x00, 0x54, 0xfd, 0x1e, 0x5c, 0x9d, 0x02, 0x50, 0xc9, 0x78, 0xbb, 0x2d, 0x74, 0x8a, 0xbe, 0x1e, 0x94, 0x65, 0xd7, 0x1a, 0x81, 0x65, 0xd3, 0x12, 0x6d, 0xce, 0x5d, 0xb2, 0xad, 0xac, 0xc0, 0x03, 0xe9, 0x06, 0x2b, 0xa3, 0x7a, 0x54, 0xb6, 0x3e, 0x5f, 0x49, 0xa4, 0xea, 0xfe, 0xbd, 0x7e, 0x4b, 0xf5, 0xb0, 0xa7, 0x96, 0xc2, 0xb3, 0xa9, 0x50, 0xfa, 0x09, 0xc7, 0x98, 0xd3, 0xfa, 0x3e, 0x86, 0xc4, 0xb6, 0x2c, 0x33, 0xba, 0x93, 0x65, 0xed, 0xa0, 0x54, 0xe5, 0xfe, 0x74, 0xa4, 0x1f, 0x21, 0xb5, 0x95, 0x02, 0x6a, 0xcf, 0x10, 0x93, 0xc9, 0x0a, 0x8c, 0x71, 0x72, 0x2f, 0x91, 0xaf, 0x1e, 0xd2, 0x9a, 0x41, 0xa2, 0x44, 0x9a, 0x32, 0x0f, 0xc7, 0xba, 0x31, 0x20, 0xe3, 0xe8, 0xc3, 0xe4, 0x24, 0x0c, 0x04, 0x92, 0x5c, 0xc6, 0x98, 0xec, 0xd6, 0x6c, 0x7c, 0x90, 0x6b, 0xdf, 0x24, 0x0a, 0xda, 0xd9, 0x72, 0xb4, 0xdf, 0xf4, 0x86, 0x9d, 0x40, 0x0b, 0x5d, 0x13, 0xe3, 0x3e, 0xeb, 0xa3, 0x8e, 0x07, 0x5e, 0x87, 0x2b, 0x0e, 0xd3, 0xe9, 0x1c, 0xc9, 0xc2, 0x83, 0x86, 0x7a, 0x4f, 0xfc, 0x39, 0x01, 0xd2, 0x06, 0x9f}; // Length: 256 bytes
byte saltVal[] = {0xe1, 0x25, 0x6f, 0xc1, 0xee, 0xef, 0x81, 0x77, 0x3f, 0xdd, 0x54, 0x65, 0x7e, 0x40, 0x07, 0xfd, 0xe6, 0xbc, 0xb9, 0xb1}; // Length: 20 bytes

// Messages (msg)
const byte msg[10][128] = {
  {0xdf, 0xc2, 0x26, 0x04, 0xb9, 0x5d, 0x15, 0x32, 0x80, 0x59, 0x74, 0x5c, 0x6c, 0x98, 0xeb, 0x9d, 0xfb, 0x34, 0x7c, 0xf9, 0xf1, 0x70, 0xaf, 0xf1, 0x9d, 0xee, 0xec, 0x55, 0x5f, 0x22, 0x28, 0x5a, 0x67, 0x06, 0xc4, 0xec, 0xbf, 0x0f, 0xb1, 0x45, 0x8c, 0x60, 0xd9, 0xbf, 0x91, 0x3f, 0xba, 0xe6, 0xf4, 0xc5, 0x54, 0xd2, 0x45, 0xd9, 0x46, 0xb4, 0xbc, 0x5f, 0x34, 0xae, 0xc2, 0xac, 0x6b, 0xe8, 0xb3, 0x3d, 0xc8, 0xe0, 0xe3, 0xa9, 0xd6, 0x01, 0xdf, 0xd5, 0x36, 0x78, 0xf5, 0x67, 0x44, 0x43, 0xf6, 0x7d, 0xf7, 0x8a, 0x3a, 0x9e, 0x09, 0x33, 0xe5, 0xf1, 0x58, 0xb1, 0x69, 0xac, 0x8d, 0x1c, 0x4c, 0xd0, 0xfb, 0x87, 0x2c, 0x14, 0xca, 0x8e, 0x00, 0x1e, 0x54, 0x2e, 0xa0, 0xf9, 0xcf, 0xda, 0x88, 0xc4, 0x2d, 0xca, 0xd8, 0xa7, 0x40, 0x97, 0xa0, 0x0c, 0x22, 0x05, 0x5b, 0x0b, 0xd4, 0x1f},
  {0xfd, 0x6a, 0x06, 0x3e, 0x61, 0xc2, 0xb3, 0x54, 0xfe, 0x8c, 0xb3, 0x7a, 0x5f, 0x37, 0x88, 0xb5, 0xc0, 0x1f, 0xf1, 0x5a, 0x72, 0x5f, 0x6b, 0x81, 0x81, 0xe6, 0xf6, 0xb7, 0x95, 0xce, 0x1c, 0xf3, 0x16, 0xe9, 0x30, 0xcc, 0x93, 0x9c, 0xd4, 0xe8, 0x65, 0xf0, 0xbd, 0xb8, 0x8f, 0xe6, 0xbb, 0x62, 0xe9, 0x0b, 0xf3, 0xff, 0x7e, 0x4d, 0x6f, 0x07, 0x32, 0x0d, 0xda, 0x09, 0xa8, 0x75, 0x84, 0xa0, 0x62, 0x0c, 0xad, 0xa2, 0x2a, 0x87, 0xff, 0x9a, 0xb1, 0xe3, 0x5c, 0x79, 0x77, 0xb0, 0xda, 0x88, 0xea, 0xb0, 0x0c, 0xa1, 0xd2, 0xa0, 0x84, 0x9f, 0xec, 0x56, 0x95, 0x13, 0xd5, 0x0c, 0x5e, 0x39, 0x2a, 0xfc, 0x03, 0x2a, 0xee, 0x2d, 0x3e, 0x52, 0x2c, 0x8c, 0x17, 0x25, 0xdd, 0x3e, 0xef, 0x0e, 0x0b, 0x35, 0xc3, 0xa8, 0x37, 0x01, 0xaf, 0x31, 0xf9, 0xe9, 0xb1, 0x3c, 0xe6, 0x3b, 0xb0, 0xa5},
  {0x7e, 0x66, 0x90, 0x20, 0x3c, 0xb0, 0x68, 0xb8, 0x53, 0x0c, 0xb1, 0xff, 0x4e, 0xea, 0xf0, 0xfc, 0x69, 0xa4, 0xe3, 0x04, 0xf5, 0x56, 0x07, 0x2d, 0xfe, 0xef, 0x5c, 0x05, 0x2c, 0x88, 0x6c, 0x83, 0xe7, 0xf5, 0x8a, 0x3d, 0xbe, 0x9a, 0x58, 0xdc, 0x0a, 0x80, 0x8c, 0xcd, 0xce, 0xa9, 0xf3, 0x3a, 0xe2, 0xa0, 0xb6, 0x39, 0x51, 0x53, 0xdc, 0x43, 0xff, 0x25, 0x10, 0xe7, 0x8f, 0x40, 0xa4, 0xbf, 0x83, 0x28, 0xd7, 0xa4, 0xa5, 0x96, 0x53, 0x1e, 0xa6, 0x83, 0xfa, 0x1e, 0x06, 0x83, 0xe2, 0xf0, 0x33, 0x54, 0x9e, 0x6b, 0xf5, 0xb7, 0xc0, 0x6b, 0x09, 0x7e, 0x9b, 0x81, 0x0d, 0xe7, 0x4e, 0xe8, 0x9c, 0x28, 0xfe, 0xbb, 0xb9, 0x4b, 0x62, 0x66, 0x71, 0x3c, 0x85, 0x5b, 0xbc, 0x21, 0xc7, 0x06, 0xa5, 0xe9, 0x25, 0x02, 0xaa, 0x28, 0xbb, 0x8d, 0x66, 0x22, 0x87, 0x39, 0x6d, 0x25, 0x70, 0xe5},
  {0x1d, 0xce, 0x34, 0xc6, 0x2e, 0x4a, 0xef, 0x45, 0xe1, 0xe7, 0x38, 0x49, 0x7b, 0x60, 0x2e, 0x82, 0xc1, 0xfe, 0x46, 0x9f, 0x73, 0x0c, 0xf1, 0x64, 0x17, 0x8b, 0x79, 0xfd, 0xf7, 0x27, 0x2c, 0x92, 0x6d, 0x69, 0xbd, 0x1b, 0x5e, 0x2d, 0xe7, 0x76, 0x05, 0x57, 0x53, 0xb6, 0xf2, 0xc2, 0xbc, 0xbf, 0x52, 0x79, 0x51, 0x10, 0x70, 0x2a, 0x5b, 0xdf, 0x7c, 0xd7, 0x1f, 0x6b, 0x8c, 0xcf, 0x06, 0x8e, 0xe0, 0xdd, 0xfb, 0x91, 0x6a, 0xbf, 0x15, 0x45, 0x8d, 0xd9, 0x76, 0x4f, 0x26, 0x2b, 0x73, 0xc4, 0xc9, 0x81, 0xf5, 0xf6, 0x4d, 0xe9, 0x1e, 0x8d, 0x8a, 0x6a, 0x30, 0xd9, 0x61, 0xf3, 0xab, 0x66, 0xfd, 0x92, 0xb6, 0xd1, 0x59, 0xe6, 0xc0, 0xdb, 0x02, 0xd7, 0x67, 0xbc, 0x1f, 0x84, 0x99, 0xba, 0xae, 0x7d, 0xf9, 0xf9, 0x10, 0x33, 0x84, 0x95, 0xc8, 0xad, 0x74, 0xee, 0x80, 0x7c, 0x64, 0x43},
  {0xc3, 0x29, 0x76, 0x43, 0x2e, 0x24, 0x0d, 0x23, 0xdf, 0x65, 0x94, 0xf2, 0x88, 0x5f, 0x00, 0xdb, 0x7f, 0xa7, 0xe5, 0x3b, 0x7a, 0xa8, 0x4e, 0xf8, 0x97, 0x98, 0xec, 0x14, 0x9f, 0xab, 0x74, 0x82, 0x8b, 0x86, 0x42, 0x38, 0x47, 0xf6, 0x42, 0x85, 0xb7, 0xe2, 0x10, 0xa5, 0xf8, 0x7e, 0x5e, 0x93, 0xe8, 0xc2, 0x97, 0x1e, 0xe8, 0x1b, 0xc1, 0x3f, 0xe0, 0x60, 0xa8, 0xaa, 0x84, 0x07, 0x39, 0xa3, 0xd6, 0x99, 0x2c, 0x13, 0xec, 0x63, 0xe6, 0xdb, 0xf4, 0x6f, 0x9d, 0x68, 0x75, 0xb2, 0xbd, 0x87, 0xd8, 0x87, 0x8a, 0x7b, 0x26, 0x5c, 0x07, 0x4e, 0x13, 0xab, 0x17, 0x64, 0x3c, 0x2d, 0xe3, 0x56, 0xad, 0x4a, 0x7b, 0xfd, 0xa6, 0xd3, 0xc0, 0xcc, 0x9f, 0xf3, 0x81, 0x63, 0x89, 0x63, 0xe4, 0x62, 0x57, 0xde, 0x08, 0x7b, 0xbd, 0xd5, 0xe8, 0xcc, 0x37, 0x63, 0x83, 0x6b, 0x4e, 0x83, 0x3a, 0x42},
  {0x21, 0x85, 0x51, 0xf4, 0x25, 0xb3, 0x55, 0x7d, 0x09, 0xcc, 0xfd, 0xec, 0xc9, 0xab, 0x49, 0x90, 0x85, 0xbd, 0x7f, 0xe7, 0xd6, 0x08, 0x20, 0xbe, 0x62, 0x6c, 0x1a, 0x9a, 0xae, 0x29, 0x3f, 0x57, 0x34, 0xa2, 0xf6, 0x0f, 0xb6, 0x61, 0x31, 0x3d, 0xd1, 0x5a, 0x9f, 0x22, 0xd5, 0x74, 0x22, 0x68, 0xd4, 0x45, 0x83, 0x06, 0xf9, 0x1d, 0x65, 0x63, 0x1b, 0x47, 0x77, 0xbe, 0x92, 0x8b, 0xee, 0xcd, 0x4a, 0xf7, 0x33, 0xa4, 0x16, 0xe0, 0xd8, 0xd9, 0x46, 0x23, 0xd1, 0xe6, 0x7b, 0xb0, 0xe1, 0xce, 0xba, 0x4a, 0x52, 0x04, 0xc0, 0x88, 0xe9, 0x88, 0x95, 0x20, 0x19, 0x53, 0x64, 0x64, 0x77, 0xf5, 0x8a, 0x0d, 0x6e, 0x7d, 0xed, 0x38, 0x34, 0x99, 0x8f, 0xae, 0xfc, 0xfe, 0x63, 0x68, 0x6e, 0x0a, 0x5f, 0x53, 0x54, 0xa8, 0xd2, 0x50, 0x96, 0x75, 0xf8, 0x7f, 0x68, 0x21, 0xcb, 0xbd, 0xc2, 0x17},
  {0x06, 0xb7, 0x6a, 0xae, 0xb9, 0x46, 0xfe, 0x68, 0x67, 0xe4, 0x71, 0x6a, 0x8f, 0x1e, 0xe8, 0xd6, 0x1c, 0x48, 0x3a, 0xb3, 0x45, 0xcb, 0xf8, 0xe5, 0xb2, 0xbf, 0xab, 0x5c, 0xe0, 0xbd, 0x5c, 0x8b, 0xc6, 0xee, 0x5a, 0x1c, 0xb9, 0x68, 0x37, 0xe2, 0x8d, 0xbb, 0x14, 0x0f, 0xfd, 0xc6, 0x1e, 0xa7, 0x4c, 0xd0, 0x59, 0x34, 0x2d, 0xd4, 0x9d, 0xbc, 0xe1, 0x1b, 0xde, 0xf0, 0x9f, 0x10, 0xb0, 0xa6, 0x38, 0x51, 0x09, 0x89, 0xfb, 0x02, 0x49, 0x0f, 0xd6, 0x66, 0x79, 0xac, 0xbf, 0xb0, 0xd0, 0x46, 0x52, 0x16, 0x7c, 0xe8, 0xbc, 0x28, 0x9f, 0xba, 0xd7, 0x60, 0x97, 0x31, 0x96, 0xfa, 0x82, 0x83, 0xa4, 0x05, 0x01, 0x5e, 0x48, 0xbb, 0x3d, 0xd9, 0x8c, 0x0e, 0x28, 0xab, 0x9e, 0x83, 0x06, 0x9a, 0x76, 0x43, 0x2b, 0x37, 0xb9, 0x70, 0x06, 0xc9, 0xde, 0xb5, 0x5e, 0x87, 0x8f, 0x21, 0xdc, 0x0a},
  {0xf9, 0x16, 0x70, 0xbf, 0x6b, 0x8b, 0xf5, 0xc8, 0xc7, 0x50, 0x56, 0xd8, 0x44, 0x16, 0x8f, 0xc6, 0xec, 0x0c, 0x28, 0xd0, 0x94, 0x00, 0xc1, 0xdf, 0x11, 0xc7, 0xef, 0x0d, 0xa9, 0xe0, 0x46, 0x64, 0xc8, 0x54, 0xb7, 0xe8, 0xf4, 0xe0, 0x1d, 0xd8, 0x03, 0x56, 0x12, 0x32, 0x8c, 0x41, 0x07, 0x75, 0x9b, 0xc8, 0x94, 0xaa, 0xa9, 0xd5, 0x0c, 0xa5, 0xcb, 0x76, 0x55, 0x89, 0x29, 0x83, 0xf6, 0x8a, 0xb2, 0x81, 0x72, 0xf7, 0x0e, 0xc6, 0xd5, 0x77, 0xd4, 0xde, 0x8c, 0x93, 0xfe, 0x2e, 0x79, 0x74, 0x9a, 0xd7, 0x47, 0xee, 0xc2, 0xdd, 0xfb, 0xbe, 0xcd, 0x89, 0xcc, 0x10, 0xc7, 0x0b, 0x35, 0x45, 0x1f, 0x64, 0x48, 0xf2, 0xa0, 0x83, 0x45, 0x2c, 0xa2, 0xae, 0x6b, 0x03, 0x82, 0x24, 0x0e, 0x4c, 0x4f, 0x01, 0xea, 0xa4, 0xc6, 0x61, 0xb7, 0xb1, 0x81, 0xc8, 0xfe, 0xab, 0x6b, 0xc2, 0x2a, 0x1b},
  {0x64, 0xe3, 0xf5, 0x41, 0x45, 0x31, 0x70, 0xdb, 0x95, 0x2c, 0x09, 0xb9, 0x3f, 0x98, 0xbc, 0xf5, 0xcb, 0x77, 0xd8, 0xb4, 0x98, 0x38, 0x61, 0xfa, 0x65, 0x2c, 0xb2, 0xc3, 0x16, 0x39, 0x66, 0x4f, 0xb5, 0xd2, 0x79, 0xbd, 0xb8, 0x26, 0xab, 0xdb, 0x82, 0x98, 0x25, 0x3d, 0x2c, 0x70, 0x5f, 0x8c, 0x84, 0xd0, 0x41, 0x21, 0x56, 0xe9, 0x89, 0xd2, 0xeb, 0x6e, 0x6c, 0x0c, 0xd0, 0x49, 0x80, 0x23, 0xd8, 0x8e, 0xd9, 0xe5, 0x64, 0xad, 0x72, 0x75, 0xe2, 0xeb, 0xcf, 0x57, 0x94, 0x13, 0xe1, 0xc7, 0x93, 0x68, 0x2a, 0x4f, 0x13, 0xdf, 0x22, 0x98, 0xe8, 0x8b, 0xd8, 0x81, 0x4a, 0x59, 0xdc, 0x6e, 0xd5, 0xfd, 0x5d, 0xe2, 0xd3, 0x2c, 0x8f, 0x51, 0xbe, 0x0c, 0x4f, 0x2f, 0x01, 0xe9, 0x0a, 0x4d, 0xff, 0x29, 0xdb, 0x65, 0x56, 0x82, 0xf3, 0xf4, 0x65, 0x6a, 0x3e, 0x47, 0x0c, 0xcf, 0x44, 0xd9},
  {0x33, 0xba, 0x93, 0x2a, 0xaf, 0x38, 0x84, 0x58, 0x63, 0x9f, 0x06, 0xeb, 0x9d, 0x52, 0x01, 0xfc, 0xa5, 0xd1, 0x06, 0xaa, 0xa8, 0xde, 0xdf, 0x61, 0xf5, 0xde, 0x6b, 0x5d, 0x6c, 0x81, 0xa9, 0x69, 0x32, 0xa5, 0x12, 0xed, 0xaa, 0x78, 0x2c, 0x27, 0xa1, 0xdd, 0x5c, 0xb9, 0xc9, 0x12, 0xfb, 0x64, 0x69, 0x8f, 0xad, 0x13, 0x52, 0x31, 0xee, 0x1b, 0x15, 0x97, 0xee, 0xc1, 0x73, 0xcd, 0x9f, 0xfd, 0x15, 0x27, 0x0c, 0x7d, 0x7e, 0x70, 0xec, 0xed, 0x3d, 0x44, 0x77, 0x76, 0x67, 0xbb, 0x78, 0x84, 0x44, 0x48, 0xa4, 0xcd, 0x49, 0xe0, 0x2a, 0x8f, 0x46, 0x5e, 0x8b, 0x18, 0xe1, 0x26, 0xac, 0x8c, 0x43, 0x08, 0x2a, 0xe3, 0x11, 0x68, 0xed, 0x31, 0x9e, 0x9c, 0x00, 0x2a, 0x5f, 0x96, 0x9f, 0xe5, 0x9f, 0xc3, 0x92, 0xe0, 0x73, 0x32, 0xba, 0x45, 0xf1, 0xf9, 0xea, 0x6b, 0x9d, 0xd5, 0xf8, 0xa0}
}; // 10 vectors, each of max length 128 bytes
#define MSG_LEN 128

// Signatures (s)
const byte s[10][256] = {
  {0x8b, 0x46, 0xf2, 0xc8, 0x89, 0xd8, 0x19, 0xf8, 0x60, 0xaf, 0x0a, 0x6c, 0x4c, 0x88, 0x9e, 0x4d, 0x14, 0x36, 0xc6, 0xca, 0x17, 0x44, 0x64, 0xd2, 0x2a, 0xe1, 0x1b, 0x9c, 0xcc, 0x26, 0x5d, 0x74, 0x3c, 0x67, 0xe5, 0x69, 0xac, 0xcb, 0xc5, 0xa8, 0x0d, 0x4d, 0xd5, 0xf1, 0xbf, 0x40, 0x39, 0xe2, 0x3d, 0xe5, 0x2a, 0xec, 0xe4, 0x02, 0x91, 0xc7, 0x5f, 0x89, 0x36, 0xc5, 0x8c, 0x9a, 0x2f, 0x77, 0xa7, 0x80, 0xbb, 0xe7, 0xad, 0x31, 0xeb, 0x76, 0x74, 0x2f, 0x7b, 0x2b, 0x8b, 0x14, 0xca, 0x1a, 0x71, 0x96, 0xaf, 0x7e, 0x67, 0x3a, 0x3c, 0xfc, 0x23, 0x7d, 0x50, 0xf6, 0x15, 0xb7, 0x5c, 0xf4, 0xa7, 0xea, 0x78, 0xa9, 0x48, 0xbe, 0xda, 0xf9, 0x24, 0x24, 0x94, 0xb4, 0x1e, 0x1d, 0xb5, 0x1f, 0x43, 0x7f, 0x15, 0xfd, 0x25, 0x51, 0xbb, 0x5d, 0x24, 0xee, 0xfb, 0x1c, 0x3e, 0x60, 0xf0, 0x36, 0x94, 0xd0, 0x03, 0x3a, 0x1e, 0x0a, 0x9b, 0x9f, 0x5e, 0x4a, 0xb9, 0x7d, 0x45, 0x7d, 0xff, 0x9b, 0x9d, 0xa5, 0x16, 0xdc, 0x22, 0x6d, 0x6d, 0x65, 0x29, 0x50, 0x03, 0x08, 0xed, 0x74, 0xa2, 0xe6, 0xd9, 0xf3, 0xc1, 0x05, 0x95, 0x78, 0x8a, 0x52, 0xa1, 0xbc, 0x06, 0x64, 0xae, 0xdf, 0x33, 0xef, 0xc8, 0xba, 0xdd, 0x03, 0x7e, 0xb7, 0xb8, 0x80, 0x77, 0x2b, 0xdb, 0x04, 0xa6, 0x04, 0x6e, 0x9e, 0xde, 0xee, 0x41, 0x97, 0xc2, 0x55, 0x07, 0xfb, 0x0f, 0x11, 0xab, 0x1c, 0x9f, 0x63, 0xf5, 0x3c, 0x88, 0x20, 0xea, 0x84, 0x05, 0xcf, 0xd7, 0x72, 0x16, 0x92, 0x47, 0x5b, 0x4d, 0x72, 0x35, 0x5f, 0xa9, 0xa3, 0x80, 0x4f, 0x29, 0xe6, 0xb6, 0xa7, 0xb0, 0x59, 0xc4, 0x44, 0x1d, 0x54, 0xb2, 0x8e, 0x4e, 0xed, 0x25, 0x29, 0xc6, 0x10, 0x3b, 0x54, 0x32, 0xc7, 0x13, 0x32, 0xce, 0x74, 0x2b, 0xcc},
  {0x49, 0x2b, 0x6f, 0x68, 0x84, 0xdf, 0x46, 0x1f, 0xe1, 0x05, 0x16, 0xb6, 0xb8, 0xcc, 0x20, 0x53, 0x85, 0xc2, 0x01, 0x08, 0xec, 0x47, 0xd5, 0xdb, 0x69, 0x28, 0x3f, 0x4a, 0x76, 0x88, 0xe3, 0x18, 0xcf, 0xdc, 0x3c, 0x49, 0x1f, 0xb2, 0x92, 0x25, 0x32, 0x5a, 0xeb, 0x46, 0xef, 0xc7, 0x5e, 0x85, 0x58, 0x40, 0x91, 0x0b, 0xba, 0xf0, 0xd1, 0xc8, 0xd4, 0x78, 0x45, 0x42, 0xb9, 0x70, 0x75, 0x4a, 0xaa, 0x84, 0xbf, 0xe4, 0x7c, 0x77, 0xb3, 0xa1, 0xb5, 0x03, 0x7d, 0x4d, 0x79, 0x75, 0x94, 0x71, 0xe9, 0x6c, 0xc7, 0xa5, 0x27, 0xa0, 0xed, 0x06, 0x7e, 0x21, 0x70, 0x9e, 0xf7, 0xf4, 0xc4, 0x11, 0x1b, 0x60, 0xb8, 0xc0, 0x80, 0x82, 0xc8, 0x18, 0x0c, 0x7c, 0x96, 0xb6, 0x1c, 0x0f, 0x71, 0x02, 0xed, 0x9b, 0x90, 0xe2, 0x4d, 0xe1, 0x1e, 0x62, 0x98, 0xbb, 0x24, 0x45, 0x18, 0xf9, 0xb4, 0x46, 0xce, 0x64, 0x1f, 0xe9, 0x95, 0xe9, 0xcc, 0x29, 0x9e, 0xd4, 0x11, 0xb6, 0x5e, 0xb2, 0x5e, 0xaa, 0xe9, 0xe5, 0x53, 0x48, 0x4a, 0x0a, 0x7e, 0x95, 0x6e, 0xad, 0xf0, 0x84, 0x08, 0x88, 0xc7, 0x0e, 0x5c, 0xa6, 0xeb, 0xc3, 0xe4, 0x79, 0xf8, 0xc6, 0x9c, 0x53, 0xcf, 0x31, 0x37, 0x0a, 0xb3, 0x85, 0xe8, 0xb6, 0x73, 0xdc, 0x45, 0xa0, 0xc1, 0x96, 0x4e, 0xc4, 0x94, 0x68, 0xd1, 0x82, 0x46, 0x21, 0x3a, 0x8f, 0x93, 0xa2, 0xa9, 0x6a, 0xad, 0x5a, 0x27, 0x01, 0xc1, 0x91, 0xa1, 0x4a, 0x31, 0x51, 0x9e, 0x4f, 0x36, 0x54, 0x4d, 0x66, 0x87, 0x08, 0xff, 0x37, 0xbe, 0x54, 0x81, 0xcb, 0x0f, 0xfa, 0x2b, 0x0e, 0x1f, 0x14, 0x5e, 0x29, 0xf8, 0x57, 0x5d, 0xfa, 0x9e, 0xc3, 0x0c, 0x6c, 0xb4, 0x1c, 0x39, 0x34, 0x39, 0x29, 0x22, 0x10, 0xea, 0x80, 0x6a, 0x50, 0x55, 0x98, 0xeb, 0xdf, 0x08, 0x33},
  {0x50, 0x9a, 0x01, 0xbb, 0x03, 0x60, 0xd1, 0x16, 0x0e, 0xd3, 0xff, 0x33, 0x43, 0x22, 0x91, 0xcf, 0xbb, 0x63, 0xda, 0xa2, 0x93, 0x38, 0x19, 0x60, 0x0d, 0xb7, 0xdd, 0x82, 0x5a, 0xef, 0x13, 0xdd, 0x1e, 0x9a, 0x88, 0x8a, 0x9f, 0xb6, 0xfe, 0xa9, 0x3d, 0xeb, 0xd4, 0xcf, 0x4b, 0xc7, 0x71, 0x29, 0xb0, 0x6d, 0xd4, 0x72, 0x71, 0x93, 0xd7, 0xe8, 0xa2, 0xe5, 0xaa, 0x5a, 0x60, 0x20, 0xb6, 0x45, 0x24, 0xe9, 0x3a, 0xbb, 0x04, 0x06, 0xf5, 0xa1, 0x8f, 0x74, 0xff, 0x0a, 0xa8, 0x04, 0x91, 0x9d, 0xf4, 0x07, 0x2e, 0x31, 0x9c, 0xe8, 0x23, 0x44, 0x31, 0xc9, 0x4e, 0x8e, 0xef, 0x8c, 0x5c, 0xe8, 0x13, 0xa0, 0x7b, 0x2f, 0x66, 0xdd, 0x6a, 0x03, 0x2c, 0x3e, 0x69, 0xa3, 0xc5, 0x8c, 0x6b, 0x54, 0xac, 0xf0, 0x8b, 0xbb, 0xb0, 0x19, 0xdf, 0x15, 0xf3, 0xab, 0xd2, 0x2c, 0x67, 0xf3, 0xe2, 0xcb, 0xff, 0xe9, 0x98, 0x87, 0xad, 0xee, 0x58, 0xa3, 0x9c, 0xc3, 0x0a, 0xc4, 0x5a, 0x6e, 0x6e, 0x59, 0x28, 0x3e, 0xe0, 0x89, 0x0a, 0xa8, 0x70, 0x72, 0xa8, 0x57, 0x84, 0x5f, 0x5c, 0xf3, 0xdd, 0xac, 0xdc, 0x77, 0x6e, 0x58, 0xe5, 0x0b, 0x66, 0xe9, 0x5e, 0xb1, 0x3d, 0xec, 0x49, 0xce, 0x45, 0x50, 0x5c, 0x37, 0x87, 0x34, 0xe9, 0x64, 0xe8, 0x09, 0x5d, 0x34, 0xa0, 0x13, 0x17, 0x76, 0x8b, 0x7b, 0x9f, 0xbe, 0xf6, 0xeb, 0x24, 0xb0, 0x8b, 0x1b, 0xf0, 0x31, 0x2a, 0xb5, 0x1e, 0x0a, 0xce, 0xa4, 0xa3, 0xdf, 0xdf, 0xa6, 0xfa, 0x7b, 0xb1, 0x15, 0xb8, 0xb6, 0x85, 0xd3, 0x54, 0x84, 0x1d, 0x19, 0x01, 0xbc, 0x73, 0xcc, 0x65, 0x5a, 0xe2, 0x46, 0xa5, 0x45, 0x3e, 0xa8, 0xd1, 0x60, 0x61, 0x04, 0x25, 0xc2, 0xc1, 0x49, 0x69, 0xbf, 0x22, 0xa7, 0xe1, 0x1e, 0x66, 0x3c, 0xff, 0x15, 0x01, 0xf1},
  {0x1b, 0xd7, 0x9d, 0x25, 0xac, 0x6b, 0x0f, 0x24, 0x2f, 0x39, 0x55, 0x5c, 0x85, 0xd8, 0x58, 0xc2, 0x36, 0x80, 0xe1, 0xeb, 0xf9, 0x59, 0x0d, 0x05, 0x46, 0x3e, 0xbc, 0x58, 0x45, 0x4a, 0x78, 0x22, 0xcf, 0x0e, 0x0c, 0x2a, 0xb9, 0x87, 0x2b, 0x6e, 0xac, 0x5a, 0xe8, 0xce, 0x3d, 0xa7, 0x73, 0xd6, 0xb2, 0x03, 0x9e, 0x9b, 0x26, 0xce, 0x75, 0x1d, 0xad, 0xc4, 0x85, 0x79, 0x32, 0x0e, 0xa6, 0x3b, 0x97, 0x8b, 0x0d, 0xf0, 0x38, 0x19, 0x1d, 0x91, 0x28, 0x10, 0x21, 0x28, 0xa3, 0x65, 0xc0, 0x1d, 0x9e, 0x2b, 0x43, 0xfe, 0x2b, 0x5e, 0xf1, 0xce, 0x9e, 0xe8, 0xf4, 0xa1, 0xe1, 0x2c, 0xae, 0xf1, 0xbb, 0xe7, 0xf3, 0xa8, 0xd1, 0xa9, 0x3c, 0x9f, 0x39, 0x97, 0x53, 0xbb, 0xfd, 0x60, 0xd2, 0x2d, 0x8f, 0x39, 0x20, 0x6a, 0x51, 0x1e, 0xa4, 0x48, 0xdc, 0x23, 0xcc, 0x0e, 0x4f, 0xcf, 0x0b, 0x77, 0xd3, 0xf3, 0xfb, 0xd9, 0x18, 0x8b, 0x74, 0x0d, 0xe3, 0xf8, 0x50, 0x09, 0xde, 0x94, 0xee, 0x15, 0x7d, 0xbf, 0x7e, 0xdc, 0x31, 0x65, 0xe9, 0xf6, 0x9b, 0x59, 0xdb, 0x37, 0xf7, 0xfd, 0xc5, 0x07, 0x49, 0x6d, 0xe8, 0x94, 0x1a, 0x2a, 0x26, 0x28, 0x77, 0x4b, 0x06, 0xc8, 0xca, 0xb0, 0x34, 0xbb, 0xe3, 0xd2, 0xc0, 0x4d, 0x25, 0x3b, 0x59, 0x48, 0xd6, 0xe5, 0x71, 0x23, 0x73, 0xad, 0xa9, 0x9b, 0x7f, 0x86, 0x06, 0x12, 0x44, 0x0c, 0x5e, 0xed, 0x81, 0xef, 0xee, 0xa1, 0x8d, 0x76, 0x32, 0x9d, 0xc3, 0x0b, 0xd9, 0xfc, 0xc5, 0x00, 0xe9, 0x23, 0x15, 0x67, 0x71, 0x42, 0xd5, 0xe1, 0xb6, 0xb4, 0x5a, 0xe0, 0xe6, 0xe7, 0x25, 0x12, 0x2f, 0x04, 0x6c, 0x9a, 0x54, 0x4a, 0xd1, 0xef, 0x1d, 0xdc, 0x7c, 0x6b, 0x2a, 0x78, 0x09, 0x71, 0x5a, 0xb7, 0x5e, 0xf8, 0x70, 0xee, 0x66, 0x70, 0x62, 0x7a},
  {0xbe, 0x69, 0xc5, 0x4d, 0xad, 0x9d, 0x8b, 0x6d, 0xb7, 0x67, 0x6f, 0xe7, 0x43, 0x21, 0xa0, 0xae, 0xb0, 0x8d, 0x1c, 0xc1, 0x7f, 0x66, 0x07, 0xe8, 0x79, 0x82, 0xf9, 0x94, 0x89, 0x34, 0x4e, 0x99, 0x37, 0x8c, 0x38, 0x34, 0x1e, 0x0e, 0x60, 0x5b, 0x8f, 0xf9, 0x03, 0xc7, 0x4a, 0x97, 0x38, 0x72, 0xa9, 0x88, 0x0e, 0x05, 0xa8, 0xef, 0x0b, 0xd3, 0xe6, 0x04, 0x99, 0x31, 0xac, 0xf1, 0x52, 0xdd, 0x54, 0xfe, 0xc9, 0x10, 0x5a, 0x57, 0xb7, 0x3f, 0x77, 0x63, 0x1d, 0xb7, 0x36, 0xb4, 0x27, 0xf1, 0xbd, 0x83, 0x27, 0x5e, 0x01, 0x73, 0xd4, 0xe0, 0x9c, 0xd4, 0xf8, 0xc3, 0x82, 0xe8, 0xb5, 0x02, 0xa3, 0xb0, 0xad, 0xbd, 0x0c, 0x68, 0x91, 0x1d, 0x02, 0xde, 0x17, 0xff, 0xf3, 0xd9, 0x27, 0xe2, 0x50, 0xe1, 0x82, 0x67, 0x62, 0xef, 0xc0, 0xb8, 0x95, 0xdf, 0xa5, 0x02, 0xf1, 0x8d, 0xc3, 0x34, 0xb4, 0xc5, 0x73, 0xf9, 0x9b, 0x51, 0xb7, 0x4f, 0xdd, 0x23, 0x00, 0x98, 0x61, 0x02, 0x8f, 0x1e, 0xed, 0x68, 0x75, 0xbf, 0x31, 0xd5, 0x57, 0xac, 0xd6, 0xde, 0x8f, 0x63, 0xfa, 0x12, 0x74, 0xf7, 0xbe, 0xd7, 0xa1, 0xb4, 0xc0, 0x79, 0xf5, 0xa9, 0xb8, 0x5b, 0xfa, 0xb2, 0x9f, 0x55, 0x2c, 0x7f, 0x64, 0x7d, 0x6c, 0x92, 0x41, 0x56, 0x3f, 0xac, 0x12, 0x3a, 0x73, 0x96, 0x74, 0xb0, 0xad, 0x09, 0xc3, 0xf9, 0x42, 0x08, 0x79, 0x5d, 0x9a, 0x50, 0x52, 0x9d, 0x79, 0x9a, 0xfc, 0x59, 0x7e, 0x02, 0x5f, 0x12, 0x54, 0x99, 0x5f, 0x04, 0x32, 0x34, 0x89, 0x16, 0x20, 0xb1, 0x0d, 0x5c, 0x55, 0x69, 0xbe, 0x14, 0xb0, 0xf4, 0x63, 0xa4, 0x95, 0xf4, 0x16, 0x02, 0x46, 0x18, 0x48, 0x6c, 0x7f, 0xf5, 0xec, 0x77, 0x5c, 0xfb, 0x46, 0xfb, 0xdf, 0xf5, 0x37, 0x9c, 0x5e, 0x09, 0x15, 0x0b, 0x81, 0xa3},
  {0x96, 0xa2, 0x69, 0xe0, 0xca, 0x4a, 0xf6, 0x26, 0xaa, 0x8b, 0x7f, 0x45, 0xac, 0xda, 0xa7, 0x6d, 0x5d, 0xab, 0xfe, 0xa5, 0xa7, 0xd7, 0x62, 0xab, 0x39, 0xb1, 0x38, 0xdc, 0x75, 0x75, 0xfe, 0x19, 0x6a, 0xeb, 0x18, 0x2b, 0xee, 0x5b, 0x18, 0x50, 0x39, 0x69, 0xb5, 0xba, 0x11, 0x1f, 0x05, 0x7c, 0xcd, 0xbf, 0x29, 0x2d, 0x74, 0x88, 0x17, 0x3a, 0x4a, 0x4d, 0xd0, 0x4e, 0x62, 0xc2, 0x54, 0xd5, 0x02, 0x67, 0x3d, 0x5a, 0x07, 0x6d, 0x32, 0x6c, 0x66, 0xc9, 0xa7, 0x1a, 0x3b, 0x83, 0xb1, 0x00, 0x5c, 0x63, 0x66, 0xf8, 0xa0, 0x90, 0x29, 0x87, 0xdb, 0xf0, 0x8c, 0xee, 0x75, 0x62, 0xd0, 0xab, 0xff, 0xbd, 0xd6, 0x61, 0xc3, 0x52, 0x5b, 0xe8, 0xe1, 0x2d, 0xfd, 0x73, 0xed, 0x31, 0xef, 0xaa, 0x81, 0x7f, 0x61, 0xe7, 0xfe, 0xf7, 0x00, 0xa3, 0x21, 0x5e, 0x77, 0xb6, 0x23, 0x1d, 0x59, 0xc0, 0x98, 0xfa, 0x45, 0x5b, 0x69, 0xec, 0x6e, 0x65, 0x8a, 0x66, 0xcc, 0xa2, 0xe8, 0xf2, 0xe0, 0x90, 0xef, 0x70, 0x42, 0x70, 0x99, 0x51, 0x70, 0xba, 0x9a, 0x1f, 0x56, 0x1b, 0x84, 0x86, 0x76, 0x80, 0x44, 0x13, 0x64, 0x5a, 0x94, 0x3d, 0x88, 0x31, 0x91, 0xd9, 0x5b, 0x02, 0x4d, 0x6f, 0xfc, 0x9c, 0xb6, 0x11, 0xc6, 0x8f, 0x33, 0x19, 0x40, 0x3b, 0xd7, 0xc0, 0x7a, 0xc6, 0x69, 0x45, 0x01, 0x36, 0x8e, 0x81, 0x47, 0xa2, 0x56, 0xe9, 0x28, 0x60, 0x4b, 0x63, 0xd5, 0x0e, 0x2c, 0x65, 0xf3, 0xb2, 0xc3, 0x0d, 0xf1, 0xeb, 0x03, 0x63, 0xe2, 0x9f, 0xe4, 0x48, 0xf9, 0x4b, 0x69, 0x07, 0xcd, 0xf4, 0x2f, 0xbc, 0x9c, 0x27, 0xb3, 0x1a, 0x43, 0xa8, 0xf5, 0xc1, 0x5c, 0xe8, 0x13, 0xf9, 0xb2, 0x0d, 0x16, 0xda, 0x6c, 0x29, 0x88, 0x43, 0xf0, 0x52, 0xed, 0x37, 0x67, 0x8b, 0x4e, 0xf1, 0xd7, 0x8e},
  {0x65, 0xe2, 0x35, 0x8b, 0xaf, 0xc9, 0xfc, 0xb6, 0x55, 0x36, 0xa1, 0x9d, 0x27, 0xf7, 0x10, 0x59, 0x6c, 0xc3, 0x1f, 0x9a, 0x83, 0x28, 0xcf, 0x9d, 0xe2, 0x12, 0x57, 0x50, 0x60, 0x47, 0xab, 0x13, 0x40, 0xa7, 0x45, 0x05, 0x58, 0x1a, 0x54, 0xf2, 0x58, 0xbc, 0xbe, 0x0c, 0x15, 0x20, 0xf8, 0x4e, 0xbd, 0x2e, 0x36, 0x91, 0x35, 0x60, 0xdb, 0xd7, 0x15, 0x74, 0xe3, 0x73, 0x84, 0x28, 0x09, 0x7d, 0x6b, 0x81, 0x9e, 0x69, 0x00, 0xf2, 0x7d, 0xf1, 0x59, 0xdc, 0xaf, 0x08, 0xc6, 0xe1, 0x59, 0x1b, 0x07, 0x3b, 0xfe, 0xfe, 0x3d, 0xa6, 0xbc, 0x82, 0x7a, 0x64, 0x9e, 0x0b, 0xae, 0x9c, 0x52, 0xfe, 0x9a, 0xe1, 0x80, 0xd1, 0xef, 0xc0, 0x1e, 0x5a, 0x38, 0xad, 0xef, 0x10, 0x2c, 0x6d, 0x10, 0x6a, 0xf1, 0x21, 0x63, 0xb1, 0xa0, 0xf6, 0xd1, 0x54, 0x3f, 0xfc, 0xe3, 0x98, 0x0c, 0xa0, 0xf8, 0xb7, 0x0d, 0x38, 0x00, 0x72, 0x88, 0xd4, 0x7b, 0xc5, 0x65, 0xe9, 0x95, 0xb8, 0xc2, 0x1d, 0xa2, 0xf9, 0x59, 0xc9, 0x28, 0xaa, 0x2f, 0x85, 0x74, 0xa6, 0x60, 0x22, 0x60, 0x48, 0xdc, 0x9d, 0xba, 0x59, 0x52, 0x6a, 0x30, 0xe3, 0x27, 0x48, 0x08, 0x68, 0x3b, 0x41, 0xc0, 0xcf, 0x08, 0x6e, 0xa5, 0xaf, 0xc4, 0x8e, 0xb2, 0x94, 0xa8, 0x8c, 0x4b, 0x8b, 0x73, 0x83, 0xda, 0xe6, 0x46, 0x9e, 0x84, 0x83, 0x34, 0x5b, 0x1d, 0xaf, 0x1d, 0x28, 0x01, 0xbd, 0xa9, 0x3f, 0xf9, 0x1c, 0xa7, 0x5d, 0xfa, 0xa8, 0xdd, 0x5d, 0x47, 0xe7, 0x3c, 0xec, 0xf0, 0xef, 0xb0, 0x62, 0x9f, 0xda, 0x16, 0xc6, 0x01, 0x07, 0x0b, 0xee, 0x2e, 0x8c, 0xc0, 0x69, 0x51, 0x50, 0x73, 0x92, 0x02, 0xe3, 0xbe, 0x27, 0x0b, 0x98, 0x01, 0xd0, 0x85, 0xe1, 0x1e, 0x1d, 0xf0, 0x7f, 0x9a, 0x4c, 0xab, 0x54, 0xfd, 0xa2, 0x3d, 0xa6},
  {0x2e, 0xac, 0x03, 0x23, 0x3c, 0x4e, 0x24, 0xb3, 0x32, 0x84, 0x47, 0xcc, 0x09, 0x66, 0x1c, 0x25, 0x96, 0x76, 0xb5, 0x69, 0xe6, 0xa0, 0x84, 0x8b, 0x5a, 0x19, 0x30, 0x65, 0x29, 0x6a, 0x59, 0xe3, 0xb6, 0xd3, 0x5a, 0x2e, 0xcd, 0x91, 0xc6, 0xce, 0xfd, 0xa4, 0xf2, 0xbf, 0x9f, 0x22, 0x52, 0xa2, 0x73, 0x34, 0xfb, 0xbc, 0x2d, 0x79, 0xe4, 0x50, 0xd4, 0x4b, 0xc2, 0x82, 0xf7, 0xd7, 0x32, 0x1b, 0x46, 0xf8, 0x20, 0x28, 0xc1, 0x54, 0xf3, 0x0f, 0x6d, 0x62, 0xed, 0xf3, 0x67, 0x2a, 0x10, 0x19, 0xd9, 0x14, 0xec, 0x61, 0x7a, 0xab, 0x2d, 0x00, 0x7f, 0x84, 0x4e, 0x63, 0xe2, 0x95, 0xbb, 0xd8, 0xf6, 0x61, 0x63, 0xde, 0xb2, 0x78, 0xd9, 0x9d, 0x66, 0xfd, 0xdc, 0x58, 0xcc, 0xa2, 0xb9, 0x11, 0xce, 0x0a, 0xf9, 0x52, 0x65, 0x13, 0x4a, 0xf5, 0x5a, 0x4b, 0x78, 0x6c, 0xc2, 0x14, 0xfa, 0x11, 0xff, 0xa2, 0x9b, 0xcd, 0xfb, 0xed, 0x12, 0xc5, 0xce, 0x64, 0x38, 0xe9, 0xb6, 0xbe, 0xae, 0xff, 0xa3, 0x58, 0x79, 0x78, 0xa8, 0x34, 0x09, 0xc2, 0x9f, 0x11, 0x54, 0x23, 0x17, 0x4c, 0x05, 0xcb, 0x8c, 0x30, 0x19, 0x8d, 0xa8, 0xb1, 0x93, 0xf9, 0x44, 0x6b, 0x9b, 0x49, 0xf7, 0xe3, 0xe2, 0x86, 0x2e, 0xc9, 0xa3, 0x50, 0xe8, 0x44, 0x1b, 0xa4, 0xe5, 0x55, 0x0e, 0x87, 0xdb, 0x54, 0x71, 0x28, 0x65, 0xfc, 0x26, 0x90, 0xa5, 0x93, 0x8a, 0xeb, 0xb2, 0x84, 0x09, 0xb8, 0x8c, 0xf0, 0xd1, 0x72, 0x11, 0x1a, 0x74, 0xf6, 0x78, 0xee, 0x08, 0x19, 0xff, 0x8b, 0xdc, 0x22, 0xb0, 0x8f, 0xc6, 0xfe, 0xd3, 0x7b, 0x67, 0x6d, 0x07, 0x05, 0x39, 0x6f, 0x32, 0x47, 0xa2, 0x67, 0xc6, 0x0f, 0x7c, 0xcf, 0x1f, 0xb2, 0x60, 0xc0, 0xc2, 0xe9, 0x24, 0xc1, 0xef, 0x55, 0x40, 0xeb, 0x61, 0x25, 0xf3, 0xb1},
  {0x76, 0xc2, 0x97, 0xfb, 0xe3, 0x02, 0xf6, 0x86, 0x37, 0x7c, 0xb1, 0x55, 0xae, 0x8a, 0x2b, 0x65, 0xa6, 0xc5, 0x77, 0xaf, 0x30, 0x30, 0x35, 0xc4, 0xa7, 0x55, 0xfe, 0x67, 0x01, 0x4c, 0x56, 0x04, 0x76, 0xe7, 0xa7, 0x89, 0xb8, 0xf2, 0x19, 0x5b, 0x0f, 0x80, 0x41, 0x6f, 0x5f, 0x33, 0xb7, 0xfd, 0xcc, 0xc3, 0x80, 0xf9, 0x88, 0xce, 0xba, 0xdb, 0x64, 0x0e, 0x35, 0x4b, 0xf5, 0x67, 0x9e, 0xe9, 0x73, 0xa1, 0xe1, 0x48, 0x5b, 0x68, 0xbe, 0x43, 0x2b, 0x44, 0x6f, 0xf5, 0x94, 0x95, 0x04, 0x51, 0x5a, 0x65, 0xcd, 0xdb, 0x0f, 0xaf, 0x6d, 0xcd, 0x1e, 0x11, 0x88, 0x65, 0x6c, 0xe9, 0x41, 0xaf, 0x3d, 0xdc, 0x86, 0x00, 0xcf, 0x0e, 0x40, 0x87, 0xac, 0x83, 0x82, 0xf0, 0xd5, 0x06, 0x1d, 0x3d, 0x05, 0xf5, 0x8c, 0x93, 0x62, 0xeb, 0x88, 0xf3, 0x0a, 0x72, 0x4d, 0x18, 0xa1, 0x5e, 0xe6, 0x8a, 0x60, 0xc5, 0xe4, 0xde, 0xdb, 0x40, 0x84, 0xc9, 0xd0, 0x15, 0x22, 0x99, 0x90, 0x92, 0x09, 0x4c, 0x85, 0x62, 0x2e, 0x67, 0xa6, 0x6e, 0xd0, 0x34, 0x56, 0x4a, 0xc2, 0x86, 0xb0, 0xff, 0x87, 0x91, 0xe9, 0x93, 0x3a, 0x23, 0xf8, 0x3b, 0x4a, 0x88, 0xd2, 0xe7, 0x9e, 0x3a, 0x29, 0xd6, 0xa3, 0xf8, 0x7e, 0x63, 0xbb, 0x1a, 0x96, 0xa6, 0xbf, 0xd6, 0x89, 0x8e, 0xda, 0xa9, 0x38, 0xf7, 0x4c, 0x72, 0xd6, 0xc1, 0x0c, 0xb9, 0x4d, 0x05, 0x5e, 0xf3, 0xfd, 0xa9, 0xe6, 0xdd, 0x09, 0x7d, 0x52, 0x73, 0x87, 0x54, 0x80, 0x0e, 0xd4, 0x03, 0xb1, 0x44, 0x41, 0x95, 0xa3, 0x11, 0xfd, 0x69, 0x62, 0x00, 0x79, 0x99, 0xe3, 0x1e, 0xdc, 0xf2, 0x87, 0x0d, 0x1c, 0x3a, 0xe3, 0xb3, 0x64, 0x6b, 0xc7, 0xda, 0x55, 0xe5, 0xf1, 0xe6, 0x62, 0x7e, 0x62, 0x48, 0x83, 0x9e, 0x8f, 0x70, 0xb9, 0x97, 0xfc, 0x1e},
  {0x28, 0x91, 0xcb, 0xe2, 0x3c, 0xcf, 0x10, 0xc3, 0x96, 0xef, 0x76, 0xa5, 0x84, 0x0a, 0xda, 0xad, 0x64, 0x98, 0xb6, 0xfc, 0x8c, 0x6a, 0x2f, 0x6c, 0x26, 0x49, 0x6c, 0xb4, 0x28, 0xa9, 0x22, 0x1e, 0xd5, 0x9b, 0x36, 0x45, 0xf9, 0xa2, 0x5f, 0x57, 0x47, 0xfe, 0xda, 0x0f, 0x51, 0xb4, 0x53, 0x19, 0xe0, 0x97, 0x8f, 0x22, 0xac, 0x4f, 0xac, 0xbc, 0x15, 0xdb, 0x9a, 0x4e, 0x58, 0x49, 0xac, 0x2a, 0x14, 0x04, 0xae, 0xb6, 0xc0, 0x0e, 0x5e, 0xed, 0x3c, 0x07, 0xee, 0xee, 0xe2, 0x43, 0x56, 0x68, 0xfd, 0x17, 0xf1, 0x6a, 0xb2, 0x44, 0xc9, 0xd3, 0x8f, 0x9b, 0xa0, 0xde, 0x9d, 0x3f, 0x3e, 0xf0, 0xd9, 0x94, 0x09, 0x4e, 0x92, 0xe3, 0x27, 0x94, 0x8f, 0x14, 0x09, 0xef, 0x82, 0x77, 0x52, 0x34, 0x4a, 0x13, 0x75, 0xf6, 0x08, 0xdc, 0x3c, 0xaf, 0xe7, 0x49, 0x70, 0x74, 0x5a, 0x02, 0x3b, 0x32, 0x0b, 0x3b, 0xd3, 0x17, 0x1b, 0x62, 0xa6, 0x8a, 0x5c, 0xca, 0xad, 0xbc, 0x64, 0xb8, 0x2c, 0xee, 0x4b, 0x8a, 0x81, 0x84, 0x0e, 0xd8, 0xb7, 0x51, 0xac, 0x66, 0xa2, 0x9e, 0xb8, 0x1f, 0xb8, 0x19, 0xec, 0x54, 0xc7, 0x6b, 0x01, 0xc7, 0xb4, 0x12, 0xa4, 0x3e, 0xa0, 0x57, 0xa8, 0x02, 0x02, 0xf1, 0xc3, 0xc0, 0x6a, 0x4e, 0xe6, 0x05, 0x47, 0xc1, 0x3c, 0x6c, 0x2f, 0xac, 0x34, 0xa5, 0xd5, 0xaa, 0xe9, 0x82, 0xb9, 0xda, 0xbd, 0x11, 0x9b, 0x47, 0x08, 0x29, 0xbd, 0x77, 0xa5, 0x60, 0xe0, 0x97, 0x34, 0x09, 0x11, 0x5b, 0xd1, 0xab, 0x5b, 0xdc, 0x6b, 0xb4, 0x6f, 0xe4, 0x04, 0x80, 0x22, 0xb0, 0xcf, 0x4f, 0xc6, 0xaa, 0xd4, 0x18, 0x4c, 0x28, 0x62, 0x1e, 0xc6, 0xf8, 0x2e, 0xdb, 0x54, 0x73, 0x3c, 0x90, 0x26, 0x20, 0xbf, 0x45, 0xf2, 0x51, 0x7f, 0x24, 0x90, 0x2e, 0x56, 0xd5, 0x80, 0x38}
}; // 10 vectors, each of max length 256 bytes
#define S_LEN 256

void printBufferHex(const byte input[], size_t inputLength)
{
  for (size_t i = 0; i < inputLength; i++) {
    Serial.print(input[i] >> 4, HEX);
    Serial.print(input[i] & 0x0f, HEX);
    Serial.print(",");
  }
  Serial.println();
}

void setup() {
  Serial.begin(9600);
  while (!Serial);

  if (!SE05X.begin()) {
    Serial.println("Failed to communicate with SE05X!");
    while (1);
  }

  Serial.println(currentTest);
  const int KeyId = 9996;
  
  SE05X.deleteBinaryObject(KeyId);
  SE05X.writeRSAKey(KeyId,
                    kSE05x_RSABitLength_2048,
                    NULL,
                    0,
                    NULL,
                    0,
                    NULL,
                    0,
                    NULL,
                    0,
                    NULL,
                    0,
                    e,
                    sizeof(e),
                    d,
                    sizeof(d),
                    n,
                    sizeof(n),
                    kSE05x_RSAKeyFormat_RAW,
                    false,
                    kSE05x_KeyPart_Pair,
                    NULL);

  byte sha256[64] = {0};
  byte emsa[256] = {0};
  size_t sha256Len = 64;
  size_t emsaLen = 256;
  byte signature[256] = {0};
  size_t signatureLen = 0;

  for(int i = 0; i < 10; i++){
    Serial.println("");
    Serial.print("Test ");
    Serial.println((i+1));

    // print the input
    Serial.print("Input is:                     ");
    printBufferHex(&msg[i][0], MSG_LEN);

    //calculate the input SHA256
    sha256Len = 64;
    SE05X.beginSHA256();
    SE05X.updateSHA256(&msg[i][0], MSG_LEN);
    SE05X.endSHA256(sha256, &sha256Len);

    Serial.print("Input SHA256 is:              ");
    printBufferHex(sha256, sha256Len);

    emsaLen = 256;
    SE05X.emsa_pss_encode(sha256, sha256Len, emsa, &emsaLen, kSE05x_RSASignatureAlgo_SHA256_PKCS1_PSS, kSE05x_RSABitLength_2048,saltVal,sizeof(saltVal));
    Serial.print("emsa is:                     ");
    printBufferHex(emsa, emsaLen);

    // calculate the signature
    signatureLen = 0;
    SE05X.SignRSA(KeyId, emsa, emsaLen, signature, sizeof(signature), &signatureLen);

    // print the signature
    Serial.print("Signature using KeyId ");
    Serial.print(KeyId);
    Serial.print(" is: ");
    printBufferHex(signature, signatureLen);
    Serial.println();
    
    // To make the signature verifcation + the signature comparison fail, uncomment the next line:
    //signature[0] = 0x00;
    if(signatureLen == S_LEN){
      if(memcmp(&s[i][0],signature,signatureLen) == 0){
        Serial.println("Generated Signature matches test vector - passed");
      }else{
        Serial.println("Generated Signature does not match test vector - failed");
      }
    }else{
      Serial.println("Generated Signature does not match test vector - failed");
    }


    // To make the signature verifcation fail, uncomment the next line:
    //signature[0] = 0x00;

    // validate the signature
    if (SE05X.VerifyRSASSA_PSS(KeyId, sha256, sha256Len, signature, signatureLen)){
      Serial.println("Verified signature successfully :D");
    }
    else
    {
      Serial.println("oh no! failed to verify signature :(");
    }
  }

  SE05X.deleteBinaryObject(KeyId);
}


void loop() {

}
